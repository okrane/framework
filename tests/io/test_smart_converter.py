import lib.io.smart_converter as converter
from lib.io.fix import FixTranslator
from lib.io.serialize import *
import simplejson
from datetime import datetime
import types
import os

def test_converter():
    script_dir = os.path.dirname(__file__) + '/'
    
    file     = open(script_dir + 'orders.json', 'r')
    input    = file.read()
    file.close()
    
    dict_list= simplejson.loads(input, object_hook = as_datetime)
    
    file = open(script_dir + 'fix_types.json', 'r')
    input = file.read()
    file.close()

    list_map = simplejson.loads(input)["fix"]["fields"]["field"]
    
    file = open(script_dir + 'enrichment_types.json', 'r')
    input = file.read()
    file.close()
    
    list_map.extend(simplejson.loads(input))
    
    conv     = converter.Converter(list_map)
    
    for dict in dict_list:
        new_dict = {}
        for el in dict:
            new_dict[el] = conv.convert(el, dict[el])
            my_type = conv._map(el)
            assert isinstance(new_dict[el], my_type)
  
def test_fix_translator():
    ft = FixTranslator()
    
    assert ft.translate_tag(5) == "AdvTransType"
    assert ft.translate_tag('5') == "AdvTransType"
    assert ft.translate_tag("AdvTransType") == '5'
    
    s = "8= FIX.4.2|9=239|35=G|34=64|49=FLEX|50=ON1|52=20130806-06:37:58|56=ULPROD|57=T1|1=AKOCASH|11=AAA0022|21=1|37=2013080600000080|38=504|40=2|41=AAA0021|44=0.00000000|47=A|54=1|55=UCBb.AG|58=900|60=20130806-06:37:58|9000=BLCLNT1_4|9271=FY00010701342ESLO0CLNT1|10=000|"
    k = "8= FIX.4.2|9=239|35=G|34=64|49=FLEX|50=ON1|52=20130806-06:37:58|56=ULPROD|57=T1|1=AKOCASH|21=1|37=2013080600000080|38=504|40=2|41=AAA0021|44=0.00000000|47=A|54=1|55=UCBb.AG|58=900|60=20130806-06:37:58|9000=BLCLNT1_4|9271=FY00010701342ESLO0CLNT1|10=000|"
    
    test = """8=FIX.4.2|9=232|35=D|34=61070|49=FLEX|50=AVE|52=20130830-15:11:01|56=ULPROD|57=T1|128=EUR1743531|1=16816|11=AAA61001|21=1|38=280|40=2|44=47.56500000|47=A|54=1|55=BNP.PA|58=-204|100=PA|60=20130830-15:11:01|9000=BLCLNT1_772|9271=FY2000019640101CLNT1|10=220|
8=FIX.4.2|9=232|35=D|34=61071|49=FLEX|50=AVE|52=20130830-15:11:01|56=ULPROD|57=T1|128=EUR1743531|1=16816|11=AAA61002|21=1|38=430|40=2|44=47.56000000|47=A|54=1|55=BNP.PA|58=-204|100=PA|60=20130830-15:11:01|9000=BLCLNT1_772|9271=FY2000019640101CLNT1|10=214|
8=FIX.4.2|9=233|35=D|34=61072|49=FLEX|50=AVG|52=20130830-15:11:01|56=ULPROD|57=T1|128=EUR1742423|1=SELLES|11=AAA61003|21=1|38=109|40=2|44=96.52000000|47=A|54=1|55=DSY.PA|58=-214|100=PA|60=20130830-15:11:01|9000=BLCLNT1_661|9271=FY2000019614221CLNT1|10=177|
8=FIX.4.2|9=198|35=F|34=61073|49=FLEX|50=AVE|52=20130830-15:11:01|56=ULPROD|57=T1|1=16816|11=AAA61004|37=GLTShV0gdTA6yu00DE88|38=280|41=AAA61001|54=1|55=BNP.PA|100=PA|60=20130830-15:11:01|9271=FY2000019640101CLNT1|10=010|
8=FIX.4.2|9=205|35=F|34=61074|49=FLEX|50=AVF|52=20130830-15:11:01|56=ULPROD|57=T1|1=20002|11=AAA61005|37=GLTShWXedTA6Dk00mSXL|38=18720|41=AAA60928|54=1|55=ABBN_CHF.VX|100=VX|60=20130830-15:11:01|9271=FY2000019631221CLNT1|10=092|
8=FIX.4.2|9=237|35=D|34=61075|49=FLEX|50=AVF|52=20130830-15:11:01|56=ULPROD|57=T1|128=EUR1743440|1=20002|11=AAA61006|21=1|38=200|40=2|44=19.95000000|47=A|54=1|55=ABBN_CHF.VX|58=-204|100=VX|60=20130830-15:11:01|9000=BLCLNT1_699|9271=FY2000019631221CLNT1|10=118|
8=FIX.4.2|9=237|35=D|34=61076|49=FLEX|50=AVF|52=20130830-15:11:01|56=ULPROD|57=T1|128=EUR1743440|1=20002|11=AAA61007|21=1|38=300|40=2|44=19.95000000|47=A|54=1|55=ABBN_CHF.VX|58=-214|100=VX|60=20130830-15:11:01|9000=BLCLNT1_699|9271=FY2000019631221CLNT1|10=122|
8=FIX.4.2|9=203|35=F|34=61077|49=FLEX|50=AVF|52=20130830-15:11:01|56=ULPROD|57=T1|1=20002|11=AAA61008|37=GLTShWXedTA6Dk00mSXY|38=300|41=AAA61007|54=1|55=ABBN_CHF.VX|100=VX|60=20130830-15:11:01|9271=FY2000019631221CLNT1|10=243|
8=FIX.4.2|9=239|35=D|34=61078|49=FLEX|50=AVF|52=20130830-15:11:01|56=ULPROD|57=T1|128=EUR1743440|1=20002|11=AAA61009|21=1|38=16520|40=2|44=19.93000000|47=A|54=1|55=ABBN_CHF.VX|58=-204|100=VX|60=20130830-15:11:01|9000=BLCLNT1_699|9271=FY2000019631221CLNT1|10=232|
8=FIX.4.2|9=198|35=F|34=61079|49=FLEX|50=AVE|52=20130830-15:11:02|56=ULPROD|57=T1|1=16816|11=AAA61010|37=GLTShV0gdTA6yu00DE8a|38=430|41=AAA61002|54=1|55=BNP.PA|100=PA|60=20130830-15:11:02|9271=FY2000019640101CLNT1|10=054|
8=FIX.4.2|9=205|35=F|34=61080|49=FLEX|50=AVF|52=20130830-15:11:02|56=ULPROD|57=T1|1=20002|11=AAA61011|37=GLTShWXedTA6Dk00mSY0|38=16520|41=AAA61009|54=1|55=ABBN_CHF.VX|100=VX|60=20130830-15:11:02|9271=FY2000019631221CLNT1|10=048|
8=FIX.4.2|9=232|35=D|34=61081|49=FLEX|50=AVE|52=20130830-15:11:02|56=ULPROD|57=T1|128=EUR1743531|1=16816|11=AAA61012|21=1|38=150|40=2|44=47.56500000|47=A|54=1|55=BNP.PA|58=-204|100=PA|60=20130830-15:11:02|9000=BLCLNT1_772|9271=FY2000019640101CLNT1|10=222|
8=FIX.4.2|9=232|35=D|34=61082|49=FLEX|50=AVE|52=20130830-15:11:02|56=ULPROD|57=T1|128=EUR1743531|1=16816|11=AAA61013|21=1|38=800|40=2|44=47.56000000|47=A|54=1|55=BNP.PA|58=-204|100=PA|60=20130830-15:11:02|9000=BLCLNT1_772|9271=FY2000019640101CLNT1|10=221|
8=FIX.4.2|9=198|35=F|34=61083|49=FLEX|50=AVE|52=20130830-15:11:02|56=ULPROD|57=T1|1=16816|11=AAA61014|37=GLTShV0gdTA6yu00DE8k|38=150|41=AAA61012|54=1|55=BNP.PA|100=PA|60=20130830-15:11:02|9271=FY2000019640101CLNT1|10=063|
8=FIX.4.2|9=232|35=D|34=61084|49=FLEX|50=AVE|52=20130830-15:11:02|56=ULPROD|57=T1|128=EUR1743531|1=16816|11=AAA61015|21=1|38=613|40=2|44=47.55500000|47=A|54=1|55=BNP.PA|58=-204|100=PA|60=20130830-15:11:02|9000=BLCLNT1_772|9271=FY2000019640101CLNT1|10=231|
8=FIX.4.2|9=198|35=F|34=61085|49=FLEX|50=AVE|52=20130830-15:11:02|56=ULPROD|57=T1|1=16816|11=AAA61016|37=GLTShV0gdTA6yu00DE8o|38=613|41=AAA61015|54=1|55=BNP.PA|100=PA|60=20130830-15:11:02|9271=FY2000019640101CLNT1|10=078|
8=FIX.4.2|9=232|35=D|34=61086|49=FLEX|50=AVE|52=20130830-15:11:02|56=ULPROD|57=T1|128=EUR1743531|1=16816|11=AAA61017|21=1|38=100|40=2|44=47.56500000|47=A|54=1|55=BNP.PA|58=-204|100=PA|60=20130830-15:11:02|9000=BLCLNT1_772|9271=FY2000019640101CLNT1|10=227|
"""
    print ft.line_translator(s)
    print ft.pretty_print_jsonlike(s+'\n'+s, to_print=False)
    print ft.pretty_print_csv(s+'\n'+s, to_print=False)
    
    print ft.pretty_print_csv(s+'\n'+s, to_print=False, sep='\t')
    
    
    print ft.pretty_print_csv(s+'\n'+k, to_print=False, sep='\t')
    
    print ft.pretty_print_csv(test, to_print=False, sep=';')
    import paramiko
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect('172.25.152.73', 
                username = 'flexsys', 
                password = 'flexsys1')
    cmd = 'prt_fxlog ./logs/trades/20130730/FLINKI_CLNT120130730I.fix 3' 
    
    (stdin, stdout_grep, stderr) = ssh.exec_command(cmd)
    s = stdout_grep.read()
    ssh.close()
    
    csv = ft.pretty_print_csv(s, to_print=False, sep=';')
    file = open("file.csv", "w")
    file.write(csv)
    file.close()
    
if __name__== "__main__":
    test_converter()
    test_fix_translator()